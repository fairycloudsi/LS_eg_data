
% This is a function to generate matrix A and b for l2 penalized linear
% regression problem. 

% Input:
%      -- M: number of rows of matrix A
%      -- N: number of columns of matrix A

% Output:
%      -- A: each row is independently sampled from a N-dim Gaussian
%      distribution with mean 0 and covariance matrix \Sigma 
%      -- x: randomly select N/10 entries of x, each of which is
%      independently sampled from a uniform distribution over support (-2,2)
%      -- b: generated by linear model b = Ax + \epsilon, where \epsilon is
%      sampled from an n-variate Gaussian distribution N(0, I_n)

%      -- Author: Huiwen Wu Univerisy of California, Irvine
%      -- date: 09/09/2019

function [A,b,x] = GenerateAb_LS_L2(M,N)

    A = zeros(M,N);
    mu = zeros(N,1);
%     sigma = 1*eye(N);
    sigma = 0.95*ones(N)+0.05*eye(N);
    for i = 1:M
        A(i,:) = mvnrnd(mu, sigma);
    end 
    idx = randsample(N, max(floor(0.1*N),2));
    x = zeros(N,1);
    x(idx) = rand(size(idx));
    
    % normalize A
    for j = 1:N
        A(:,j) = sqrt(M)/norm(A(:,j))*A(:,j);
    end
    
    mu = zeros(M,1);
    sigma = eye(M);
    eps = mvnrnd(mu,sigma);
    eps = eps';
    b = A*x + eps;
    
    
    
end